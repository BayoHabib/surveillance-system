// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: vision.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration d'un stream
type StreamConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Width                 int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height                int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Fps                   int32                  `protobuf:"varint,3,opt,name=fps,proto3" json:"fps,omitempty"`
	Format                string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"` // "jpeg", "png", "raw"
	EnableMotionDetection bool                   `protobuf:"varint,5,opt,name=enable_motion_detection,json=enableMotionDetection,proto3" json:"enable_motion_detection,omitempty"`
	Zones                 []*DetectionZone       `protobuf:"bytes,6,rep,name=zones,proto3" json:"zones,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StreamConfig) Reset() {
	*x = StreamConfig{}
	mi := &file_vision_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamConfig) ProtoMessage() {}

func (x *StreamConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamConfig.ProtoReflect.Descriptor instead.
func (*StreamConfig) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{0}
}

func (x *StreamConfig) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *StreamConfig) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *StreamConfig) GetFps() int32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

func (x *StreamConfig) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *StreamConfig) GetEnableMotionDetection() bool {
	if x != nil {
		return x.EnableMotionDetection
	}
	return false
}

func (x *StreamConfig) GetZones() []*DetectionZone {
	if x != nil {
		return x.Zones
	}
	return nil
}

// Zone de détection
type DetectionZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Points        []*Point               `protobuf:"bytes,3,rep,name=points,proto3" json:"points,omitempty"`
	Active        bool                   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectionZone) Reset() {
	*x = DetectionZone{}
	mi := &file_vision_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectionZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectionZone) ProtoMessage() {}

func (x *DetectionZone) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectionZone.ProtoReflect.Descriptor instead.
func (*DetectionZone) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{1}
}

func (x *DetectionZone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DetectionZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DetectionZone) GetPoints() []*Point {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *DetectionZone) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type Point struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Point) Reset() {
	*x = Point{}
	mi := &file_vision_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{2}
}

func (x *Point) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Requête de démarrage de stream
type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraId      string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	CameraUrl     string                 `protobuf:"bytes,2,opt,name=camera_url,json=cameraUrl,proto3" json:"camera_url,omitempty"` // URL de la caméra (RTSP, file, etc.)
	Config        *StreamConfig          `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_vision_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{3}
}

func (x *StreamRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *StreamRequest) GetCameraUrl() string {
	if x != nil {
		return x.CameraUrl
	}
	return ""
}

func (x *StreamRequest) GetConfig() *StreamConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type StreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "success", "error"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StreamId      string                 `protobuf:"bytes,3,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"` // ID unique du stream
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_vision_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{4}
}

func (x *StreamResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StreamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

// Requête d'arrêt de stream
type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraId      string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_vision_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{5}
}

func (x *StopRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_vision_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{6}
}

func (x *StopResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StopResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Requête de statut
type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraId      string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_vision_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{7}
}

func (x *StatusRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraId      string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "stopped", "starting", "active", "error"
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Stats         *StreamStats           `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_vision_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{8}
}

func (x *StatusResponse) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusResponse) GetStats() *StreamStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// Statistiques de stream
type StreamStats struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FramesProcessed    int64                  `protobuf:"varint,1,opt,name=frames_processed,json=framesProcessed,proto3" json:"frames_processed,omitempty"`
	DetectionsCount    int64                  `protobuf:"varint,2,opt,name=detections_count,json=detectionsCount,proto3" json:"detections_count,omitempty"`
	FpsActual          float64                `protobuf:"fixed64,3,opt,name=fps_actual,json=fpsActual,proto3" json:"fps_actual,omitempty"`
	UptimeSeconds      int64                  `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	LastFrameTimestamp int64                  `protobuf:"varint,5,opt,name=last_frame_timestamp,json=lastFrameTimestamp,proto3" json:"last_frame_timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StreamStats) Reset() {
	*x = StreamStats{}
	mi := &file_vision_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStats) ProtoMessage() {}

func (x *StreamStats) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStats.ProtoReflect.Descriptor instead.
func (*StreamStats) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{9}
}

func (x *StreamStats) GetFramesProcessed() int64 {
	if x != nil {
		return x.FramesProcessed
	}
	return 0
}

func (x *StreamStats) GetDetectionsCount() int64 {
	if x != nil {
		return x.DetectionsCount
	}
	return 0
}

func (x *StreamStats) GetFpsActual() float64 {
	if x != nil {
		return x.FpsActual
	}
	return 0
}

func (x *StreamStats) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *StreamStats) GetLastFrameTimestamp() int64 {
	if x != nil {
		return x.LastFrameTimestamp
	}
	return 0
}

// Health check
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_vision_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{10}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "healthy", "degraded", "unhealthy"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ActiveStreams int32                  `protobuf:"varint,3,opt,name=active_streams,json=activeStreams,proto3" json:"active_streams,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Version       string                 `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_vision_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{11}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthResponse) GetActiveStreams() int32 {
	if x != nil {
		return x.ActiveStreams
	}
	return 0
}

func (x *HealthResponse) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Frame processing (pour streaming bidirectionnel)
type FrameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CameraId      string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	FrameData     []byte                 `protobuf:"bytes,2,opt,name=frame_data,json=frameData,proto3" json:"frame_data,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      *FrameMetadata         `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameRequest) Reset() {
	*x = FrameRequest{}
	mi := &file_vision_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameRequest) ProtoMessage() {}

func (x *FrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameRequest.ProtoReflect.Descriptor instead.
func (*FrameRequest) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{12}
}

func (x *FrameRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *FrameRequest) GetFrameData() []byte {
	if x != nil {
		return x.FrameData
	}
	return nil
}

func (x *FrameRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FrameRequest) GetMetadata() *FrameMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type FrameMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Width         int32                  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameMetadata) Reset() {
	*x = FrameMetadata{}
	mi := &file_vision_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameMetadata) ProtoMessage() {}

func (x *FrameMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameMetadata.ProtoReflect.Descriptor instead.
func (*FrameMetadata) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{13}
}

func (x *FrameMetadata) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FrameMetadata) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FrameMetadata) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FrameMetadata) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FrameResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CameraId        string                 `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Timestamp       int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Detections      []*Detection           `protobuf:"bytes,3,rep,name=detections,proto3" json:"detections,omitempty"`
	ProcessingStats *ProcessingStats       `protobuf:"bytes,4,opt,name=processing_stats,json=processingStats,proto3" json:"processing_stats,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FrameResponse) Reset() {
	*x = FrameResponse{}
	mi := &file_vision_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameResponse) ProtoMessage() {}

func (x *FrameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameResponse.ProtoReflect.Descriptor instead.
func (*FrameResponse) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{14}
}

func (x *FrameResponse) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *FrameResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FrameResponse) GetDetections() []*Detection {
	if x != nil {
		return x.Detections
	}
	return nil
}

func (x *FrameResponse) GetProcessingStats() *ProcessingStats {
	if x != nil {
		return x.ProcessingStats
	}
	return nil
}

// Détection
type Detection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "motion", "person", "vehicle", etc.
	Confidence    float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Bbox          *BoundingBox           `protobuf:"bytes,4,opt,name=bbox,proto3" json:"bbox,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Detection) Reset() {
	*x = Detection{}
	mi := &file_vision_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Detection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection) ProtoMessage() {}

func (x *Detection) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection.ProtoReflect.Descriptor instead.
func (*Detection) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{15}
}

func (x *Detection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Detection) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Detection) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Detection) GetBbox() *BoundingBox {
	if x != nil {
		return x.Bbox
	}
	return nil
}

func (x *Detection) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Detection) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BoundingBox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoundingBox) Reset() {
	*x = BoundingBox{}
	mi := &file_vision_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoundingBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundingBox) ProtoMessage() {}

func (x *BoundingBox) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundingBox.ProtoReflect.Descriptor instead.
func (*BoundingBox) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{16}
}

func (x *BoundingBox) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BoundingBox) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BoundingBox) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BoundingBox) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

// Statistiques de traitement
type ProcessingStats struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ProcessingTimeMs int64                  `protobuf:"varint,1,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	DetectionsCount  int32                  `protobuf:"varint,2,opt,name=detections_count,json=detectionsCount,proto3" json:"detections_count,omitempty"`
	CpuUsage         float32                `protobuf:"fixed32,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsageMb    int64                  `protobuf:"varint,4,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProcessingStats) Reset() {
	*x = ProcessingStats{}
	mi := &file_vision_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingStats) ProtoMessage() {}

func (x *ProcessingStats) ProtoReflect() protoreflect.Message {
	mi := &file_vision_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingStats.ProtoReflect.Descriptor instead.
func (*ProcessingStats) Descriptor() ([]byte, []int) {
	return file_vision_proto_rawDescGZIP(), []int{17}
}

func (x *ProcessingStats) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *ProcessingStats) GetDetectionsCount() int32 {
	if x != nil {
		return x.DetectionsCount
	}
	return 0
}

func (x *ProcessingStats) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *ProcessingStats) GetMemoryUsageMb() int64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

var File_vision_proto protoreflect.FileDescriptor

const file_vision_proto_rawDesc = "" +
	"\n" +
	"\fvision.proto\x12\x13surveillance.vision\"\xd8\x01\n" +
	"\fStreamConfig\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12\x10\n" +
	"\x03fps\x18\x03 \x01(\x05R\x03fps\x12\x16\n" +
	"\x06format\x18\x04 \x01(\tR\x06format\x126\n" +
	"\x17enable_motion_detection\x18\x05 \x01(\bR\x15enableMotionDetection\x128\n" +
	"\x05zones\x18\x06 \x03(\v2\".surveillance.vision.DetectionZoneR\x05zones\"\x7f\n" +
	"\rDetectionZone\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x122\n" +
	"\x06points\x18\x03 \x03(\v2\x1a.surveillance.vision.PointR\x06points\x12\x16\n" +
	"\x06active\x18\x04 \x01(\bR\x06active\"#\n" +
	"\x05Point\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"\x86\x01\n" +
	"\rStreamRequest\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\x12\x1d\n" +
	"\n" +
	"camera_url\x18\x02 \x01(\tR\tcameraUrl\x129\n" +
	"\x06config\x18\x03 \x01(\v2!.surveillance.vision.StreamConfigR\x06config\"_\n" +
	"\x0eStreamResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tstream_id\x18\x03 \x01(\tR\bstreamId\"*\n" +
	"\vStopRequest\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\"@\n" +
	"\fStopResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\rStatusRequest\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\"\x97\x01\n" +
	"\x0eStatusResponse\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x126\n" +
	"\x05stats\x18\x04 \x01(\v2 .surveillance.vision.StreamStatsR\x05stats\"\xdb\x01\n" +
	"\vStreamStats\x12)\n" +
	"\x10frames_processed\x18\x01 \x01(\x03R\x0fframesProcessed\x12)\n" +
	"\x10detections_count\x18\x02 \x01(\x03R\x0fdetectionsCount\x12\x1d\n" +
	"\n" +
	"fps_actual\x18\x03 \x01(\x01R\tfpsActual\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x120\n" +
	"\x14last_frame_timestamp\x18\x05 \x01(\x03R\x12lastFrameTimestamp\"\x0f\n" +
	"\rHealthRequest\"\xaa\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0eactive_streams\x18\x03 \x01(\x05R\ractiveStreams\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x03R\ruptimeSeconds\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\"\xa8\x01\n" +
	"\fFrameRequest\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\x12\x1d\n" +
	"\n" +
	"frame_data\x18\x02 \x01(\fR\tframeData\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12>\n" +
	"\bmetadata\x18\x04 \x01(\v2\".surveillance.vision.FrameMetadataR\bmetadata\"i\n" +
	"\rFrameMetadata\x12\x14\n" +
	"\x05width\x18\x01 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x02 \x01(\x05R\x06height\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\"\xdb\x01\n" +
	"\rFrameResponse\x12\x1b\n" +
	"\tcamera_id\x18\x01 \x01(\tR\bcameraId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12>\n" +
	"\n" +
	"detections\x18\x03 \x03(\v2\x1e.surveillance.vision.DetectionR\n" +
	"detections\x12O\n" +
	"\x10processing_stats\x18\x04 \x01(\v2$.surveillance.vision.ProcessingStatsR\x0fprocessingStats\"\xaa\x02\n" +
	"\tDetection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x124\n" +
	"\x04bbox\x18\x04 \x01(\v2 .surveillance.vision.BoundingBoxR\x04bbox\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12H\n" +
	"\bmetadata\x18\x06 \x03(\v2,.surveillance.vision.Detection.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"W\n" +
	"\vBoundingBox\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\"\xaf\x01\n" +
	"\x0fProcessingStats\x12,\n" +
	"\x12processing_time_ms\x18\x01 \x01(\x03R\x10processingTimeMs\x12)\n" +
	"\x10detections_count\x18\x02 \x01(\x05R\x0fdetectionsCount\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x02R\bcpuUsage\x12&\n" +
	"\x0fmemory_usage_mb\x18\x04 \x01(\x03R\rmemoryUsageMb2\xc8\x03\n" +
	"\rVisionService\x12V\n" +
	"\vStartStream\x12\".surveillance.vision.StreamRequest\x1a#.surveillance.vision.StreamResponse\x12Q\n" +
	"\n" +
	"StopStream\x12 .surveillance.vision.StopRequest\x1a!.surveillance.vision.StopResponse\x12Z\n" +
	"\x0fGetStreamStatus\x12\".surveillance.vision.StatusRequest\x1a#.surveillance.vision.StatusResponse\x12T\n" +
	"\tGetHealth\x12\".surveillance.vision.HealthRequest\x1a#.surveillance.vision.HealthResponse\x12Z\n" +
	"\rProcessFrames\x12!.surveillance.vision.FrameRequest\x1a\".surveillance.vision.FrameResponse(\x010\x01B)Z'surveillance-core/internal/vision/protob\x06proto3"

var (
	file_vision_proto_rawDescOnce sync.Once
	file_vision_proto_rawDescData []byte
)

func file_vision_proto_rawDescGZIP() []byte {
	file_vision_proto_rawDescOnce.Do(func() {
		file_vision_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vision_proto_rawDesc), len(file_vision_proto_rawDesc)))
	})
	return file_vision_proto_rawDescData
}

var file_vision_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_vision_proto_goTypes = []any{
	(*StreamConfig)(nil),    // 0: surveillance.vision.StreamConfig
	(*DetectionZone)(nil),   // 1: surveillance.vision.DetectionZone
	(*Point)(nil),           // 2: surveillance.vision.Point
	(*StreamRequest)(nil),   // 3: surveillance.vision.StreamRequest
	(*StreamResponse)(nil),  // 4: surveillance.vision.StreamResponse
	(*StopRequest)(nil),     // 5: surveillance.vision.StopRequest
	(*StopResponse)(nil),    // 6: surveillance.vision.StopResponse
	(*StatusRequest)(nil),   // 7: surveillance.vision.StatusRequest
	(*StatusResponse)(nil),  // 8: surveillance.vision.StatusResponse
	(*StreamStats)(nil),     // 9: surveillance.vision.StreamStats
	(*HealthRequest)(nil),   // 10: surveillance.vision.HealthRequest
	(*HealthResponse)(nil),  // 11: surveillance.vision.HealthResponse
	(*FrameRequest)(nil),    // 12: surveillance.vision.FrameRequest
	(*FrameMetadata)(nil),   // 13: surveillance.vision.FrameMetadata
	(*FrameResponse)(nil),   // 14: surveillance.vision.FrameResponse
	(*Detection)(nil),       // 15: surveillance.vision.Detection
	(*BoundingBox)(nil),     // 16: surveillance.vision.BoundingBox
	(*ProcessingStats)(nil), // 17: surveillance.vision.ProcessingStats
	nil,                     // 18: surveillance.vision.Detection.MetadataEntry
}
var file_vision_proto_depIdxs = []int32{
	1,  // 0: surveillance.vision.StreamConfig.zones:type_name -> surveillance.vision.DetectionZone
	2,  // 1: surveillance.vision.DetectionZone.points:type_name -> surveillance.vision.Point
	0,  // 2: surveillance.vision.StreamRequest.config:type_name -> surveillance.vision.StreamConfig
	9,  // 3: surveillance.vision.StatusResponse.stats:type_name -> surveillance.vision.StreamStats
	13, // 4: surveillance.vision.FrameRequest.metadata:type_name -> surveillance.vision.FrameMetadata
	15, // 5: surveillance.vision.FrameResponse.detections:type_name -> surveillance.vision.Detection
	17, // 6: surveillance.vision.FrameResponse.processing_stats:type_name -> surveillance.vision.ProcessingStats
	16, // 7: surveillance.vision.Detection.bbox:type_name -> surveillance.vision.BoundingBox
	18, // 8: surveillance.vision.Detection.metadata:type_name -> surveillance.vision.Detection.MetadataEntry
	3,  // 9: surveillance.vision.VisionService.StartStream:input_type -> surveillance.vision.StreamRequest
	5,  // 10: surveillance.vision.VisionService.StopStream:input_type -> surveillance.vision.StopRequest
	7,  // 11: surveillance.vision.VisionService.GetStreamStatus:input_type -> surveillance.vision.StatusRequest
	10, // 12: surveillance.vision.VisionService.GetHealth:input_type -> surveillance.vision.HealthRequest
	12, // 13: surveillance.vision.VisionService.ProcessFrames:input_type -> surveillance.vision.FrameRequest
	4,  // 14: surveillance.vision.VisionService.StartStream:output_type -> surveillance.vision.StreamResponse
	6,  // 15: surveillance.vision.VisionService.StopStream:output_type -> surveillance.vision.StopResponse
	8,  // 16: surveillance.vision.VisionService.GetStreamStatus:output_type -> surveillance.vision.StatusResponse
	11, // 17: surveillance.vision.VisionService.GetHealth:output_type -> surveillance.vision.HealthResponse
	14, // 18: surveillance.vision.VisionService.ProcessFrames:output_type -> surveillance.vision.FrameResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_vision_proto_init() }
func file_vision_proto_init() {
	if File_vision_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vision_proto_rawDesc), len(file_vision_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vision_proto_goTypes,
		DependencyIndexes: file_vision_proto_depIdxs,
		MessageInfos:      file_vision_proto_msgTypes,
	}.Build()
	File_vision_proto = out.File
	file_vision_proto_goTypes = nil
	file_vision_proto_depIdxs = nil
}
